/*
   ПРОСТО ПРОГРАММА ДЛЯ ДЕМОНСТРАЦИИ ЗНАНИЯ С++ ,   НИЧЕГО ПОЛЕЗНОГО НЕ ДЕЛАЕТ.

*/
// Author  Rybochkin Aleksei
// compiled in Windows 10 x64 + GCC

// #include<bits/stdc++.h>  //  ОБЪЯВЛЕНИЕ ВСЕХ БИБЛИОТЕК ЗА РАЗ
//#include<StandartTemplateLibrary.h>

#include<iostream>
#include<bitset> // Работа с бит полями в STL

//#include"Name"    //  Определение хидера в папке с проектом через ""


//#include<>
////////////////////////////////////////////////////////////////////////
///  Глобальные переменные

using namespace std;  // Стандартное имя STD  для определения именного пространства для переменных
                      //  и стандартной библиотеки



namespace myspace {   // опредедение моего пространства имен, в котором будут переменные индивидуальны, с
                      // доступом через  ::

   int myspacevara = 1; // начальное значение переменной

}
namespace ogo = myspace;  // Определяем неймспайс  ogo как альяс для myspace


char bufs[] = {'E','x','p','e','r','i','e','n','c','e'}; // Начальные данные в буфере 80 бит
int start;  // просто переменная
int len;
short value;

////////////////////////////////////////////////////////////////////////
///   Функции

void aaa(int argc, char* argv[]);  // Предварительное описание названия функции для компилятора, сама функция после main

short getdata()
{
    char gettadaa;
    printf("vvedite 4islo \n");
    gettadaa =  getchar();

          if ( gettadaa !='Q')   { printf("Net Q \n"); } else
                              {
                                std::cout << " Est Q " << endl;  // Вывод в формате С++ и перевод строки в С++
                              }
  return 0;
}


////////////////////////////////////////////////////////////////////////
/// Описание Класса

class Klass {
private:  // частный раздел без доступа других классов

public:   // публичный раздлел с доступом из вне

   Klass() {   //  Определение конструктора
   cout << "Testovaia versia # 1  - constructor \n" << endl;  //  Пишем в стиле С++

  }

    ~Klass() {   //  Определение ДЕструктора
   cout << "DEstructor \n" << endl;  //  Пишем в стиле С++

  }
};


struct a {  // битовое поле в структуре
    int a:1;
};

union b {  // битовое поле в унионе
    int b:1;
};

//////////////////////////////////////////////////////////////////////

namespace qqq {   // Определение наемспейс и класса внутри qqq::qq

class qq {

private:

public:
  qq() {
     printf("qq constr  \n");
  }

  ~qq() {
     printf("qq DEstr  \n");
  }

};

}



////////////////////////////////////////////////////////////////////////
///                              MAIN
int main(int argc, char* argv[])  // определяем передачу параметров из системы, и их количество
{
///  setlocale(LC_ALL, "ru_RU.UTF-8"); /// русская локаль


  system("cls");  // стираем экран функцией из CLI DOS / windows

  cout << " \n" << endl;  //  Пишем в стиле С++

  printf("Привет Всем !!!  \n");  // Пишем в стиле С
  cout << ogo::myspacevara;  // вывод цифры 1 из неймспайса, потом фуцнкция getdata

  getdata();  // Функция ввода числа и выход

  char aaa(int, char);

  qqq::qq();   // вызов конструктора и деструктора  qq

////////////////////////////////////////////////////////////////////////
///             Конец
 cout << "END..." <<  std::endl;
 getchar();
}

/////  Последняя функция определенная после функции main
char aaa() {

   printf("Vivod funcii aaa  posle main... \n");

   printf("");

}


































